/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package ShoppingList;

import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.HashMap;
import java.util.Iterator;

public class App {
    public String getGreeting() {
        return "Hello world.";
    }

    public static void main(String[] args) {
        System.out.println("Loading ...");

        // Generate Categories
        System.out.println("Generate Categories");
        Category vegetables = new Category(1, "Vegetables");
        Category bakery = new Category(2, "Bakery");
        Category meat = new Category(3, "Meat");
        Category others = new Category(4, "Others");

        HashMap categories = new HashMap();
        categories.put(vegetables.getId(), vegetables);
        categories.put(bakery.getId(), bakery);
        categories.put(meat.getId(), meat);
        categories.put(others.getId(), others);

        // Generate Stores and attach Categories in correct order
        System.out.println("Generate Stores and attach Categories in correct order");

        Store edeka = new Store(1, "Edeka", Arrays.asList(vegetables, bakery, meat));
        Store rewe = new Store(2, "Rewe", Arrays.asList(bakery, meat, vegetables));
        Store lidl = new Store(3, "Lidl", Arrays.asList(vegetables, meat, bakery));

        HashMap stores = new HashMap();
        stores.put(edeka.getId(), edeka);
        stores.put(rewe.getId(), rewe);
        stores.put(lidl.getId(), lidl);

        // Generate ShoppingList
        System.out.println("Generate ShoppingList");

        // Wait for Input ( Products and select Category )
          Scanner scanner = new Scanner(System.in);
          ShoppingList shoppingList = new ShoppingList();

          while(true) {
            // string input product name
            System.out.print("Enter the product name: \n");
            String productName = scanner.next();
            // select id from category
            System.out.print("Select category (1-" + categories.size() +"): \n");
            Iterator categoryIterator = categories.keySet().iterator();
            while (categoryIterator.hasNext()) {
              int key = (int)categoryIterator.next();
              System.out.print("[" + key + "] " + ((Category)categories.get(key)).getName() + "\n");
            }
            int categoryId = scanner.nextInt();
            // select number amount
            System.out.print("Select amount: \n");
            int amount = scanner.nextInt();

            Product product = new Product(productName, categoryId, amount);
            shoppingList.addProduct(product);

            // ask for loop
            System.out.print("Do you want to add an additional Product? \n");
            System.out.print("[Y]es \n");
            System.out.print("[n]o \n");
            String answer = scanner.next();
            if(answer.equals("n")) {
              break;
            }
          }

        // Wait for Input ( Store )
          // select id from Store
          System.out.print("Select Store (1-" + stores.size() +"): \n");
          Iterator storeIterator = stores.keySet().iterator();
          while (storeIterator.hasNext()) {
            int key = (int)storeIterator.next();
            System.out.print("[" + key + "] " + ((Store)stores.get(key)).getName() + "\n");
          }
          int storeId = scanner.nextInt();

          Store selectedStore = (Store)stores.get(storeId);
          System.out.println("------------------------------");
          for( Category category: selectedStore.getCategories() ) {
	            System.out.println(category.getName());
              for( Product product: shoppingList.getList()) {
                if(product.getCategoryId() == category.getId()) {
                  System.out.println(product.getAmount() + "x " + product.getName());
                }
              }
              System.out.println("------------------------------");
          }

          scanner.close();
        // Plot ShoppingList in correct Order depending on Store


    }
}
